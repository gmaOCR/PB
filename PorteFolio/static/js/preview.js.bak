import * as THREE from 'three';
import { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';

var objUrl = document.getElementById('objUrl').value;
objUrl = '/media/' + objUrl;

// Create a scene
var scene = new THREE.Scene();

// Create a camera
var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);

// Create a renderer with a transparent background
var renderer = new THREE.WebGLRenderer({ alpha: true });
renderer.setSize(window.innerWidth, window.innerHeight);
document.getElementById('three-container').appendChild(renderer.domElement);

// Add OrbitControls for camera manipulation
var controls = new OrbitControls(camera, renderer.domElement);

// Create lights
var ambientLight = new THREE.AmbientLight(0x404040);
scene.add(ambientLight);
var pointLight = new THREE.PointLight(0xffffff, 1, 1000);
pointLight.position.set(0, 0, 50);
scene.add(pointLight);

// Add axes helper
var axesHelper = new THREE.AxesHelper(5);
scene.add(axesHelper);

// Animate the scene
var animate = function () {
    requestAnimationFrame(animate);
    controls.update(); // Required for OrbitControls
    renderer.render(scene, camera);
};

// Load the OBJ file
import('three/examples/jsm/loaders/OBJLoader.js').then((OBJLoaderModule) => {
    var loader = new OBJLoaderModule.OBJLoader();
    loader.load(
        objUrl,
        function (object) {
            // Add the loaded object to the scene
            scene.add(object);

            // Adjust camera
            object.geometry.computeBoundingBox();
            var boundingBox = object.geometry.boundingBox;
            var position = boundingBox.getCenter(new THREE.Vector3()).clone();
            var size = boundingBox.getSize(new THREE.Vector3()).length();
            var distance = size / 2 / Math.tan(Math.PI * camera.fov / 180);

            camera.position.copy(position);
            camera.position.z = distance;
            camera.lookAt(position);
            camera.updateProjectionMatrix();

            // Update controls
            controls.target.copy(position);
            controls.update();
        },
        function (xhr) {
            console.log((xhr.loaded / xhr.total * 100) + '% loaded');
        },
        function (error) {
            console.log('An error happened');
        }
    );
});

animate();
